{"version":3,"sources":["components/Navigation/Navigation.js","components/Rank/Rank.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain-icon.svg"],"names":["Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Rank","fontFamily","Logo","tilt_default","options","max","height","width","paddingTop","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","placeholder","FaceRecognition","imageUrl","box","showImage","id","map","item","index","top","toprow","right","rightcol","bottom","bottomrow","left","leftcol","key","SignIn","boxShadow","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particleOptions","particles","number","density","enable","value_area","color","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","calculateFaceLocation","data","i","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","concat","toConsumableArray","state","event","input","target","models","predict","FACE_DETECT_MODEL","then","response","length","catch","err","console","log","route","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageLinkForm_ImageLinkForm","components_FaceRecognition_FaceRecognition","components_SignIn_SignIn","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4f9b88aa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <p\n          onClick={() => onRouteChange(\"signout\")}\n          className=\"f3 link dim white underline pa3 pointer ba bw2 b--white-20 br-pill grow\"\n        >\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <p\n          onClick={() => onRouteChange(\"SignIn\")}\n          className=\"f3 link dim white underline pa3 pointer ba bw2 b--white-20 br-pill grow\"\n        >\n          Sign In\n        </p>\n\n        <p\n          onClick={() => onRouteChange(\"Register\")}\n          className=\"f3 link dim white underline pa3 pointer ba bw2 b--white-20 br-pill grow\"\n        >\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Navigation;\n","import React from \"react\";\n\nconst Rank = () => {\n  return (\n    <div>\n      <div className=\"white f3\" style={{ fontFamily: \"Roboto\" }}>\n        {`Copy & Paste sample: https://dazedimg-dazedgroup.netdna-ssl.com/929/azure/dazed-prod/1240/1/1241806.jpg`}\n      </div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport brain from \"./brain-icon.svg\";\nimport \"./Logo.css\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0\">\n      <Tilt\n        className=\"Tilt br2 shadow-2 br-100\"\n        options={{ max: 50 }}\n        style={{ height: 140, width: 140 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img style={{ paddingTop: \"5px\" }} src={brain} alt=\"logo\" />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\nimport \"./ImageLinkForm.css\";\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div className=\"ma4 mt0\">\n      <p className=\" discription-text bold f3 blue m6\">\n        {\"Face Detection App\"}\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input\n            className=\"f4 pa2 w-70 center\"\n            type=\"text\"\n            onChange={onInputChange}\n            placeholder=\"Paste any image url\"\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-blue\"\n            onClick={onButtonSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\nimport \"./FaceRecognition.css\";\n\nconst FaceRecognition = ({ imageUrl, box, showImage }) => {\n  return (\n    <div className=\"center ma\">\n      <div className=\"image-container absolute mt2\">\n        {showImage === true && (\n          <img\n            id=\"inputimage\"\n            alt={\"I'm waiting for Url please Insert it!\"}\n            src={imageUrl}\n            width=\"400px\"\n            height=\"auto\"\n          />\n        )}\n        {showImage === false && <p className=\"f3\">{\"Give it a try!\"}</p>}\n        {box.map((item, index) => (\n          <div\n            className=\"bounding-box\"\n            style={{\n              top: item.toprow,\n              right: item.rightcol,\n              bottom: item.bottomrow,\n              left: item.leftcol,\n            }}\n            key={index}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport \"./SignIn.css\";\n\nconst SignIn = ({ onRouteChange }) => {\n  return (\n    <div>\n      <article\n        className=\"br3 ba blue b--blue-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\"\n        style={{ boxShadow: \"4px 4px 8px 0px white\" }}\n      >\n        <main className=\"pa4 white-80\">\n          <form className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--white ph0 mh0\">\n              <legend className=\"f3 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  className=\"pa2 input-reset ba bg-white hover-bg-blue hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  className=\"b pa2 input-reset ba bg-white hover-bg-blue hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                className=\"b pa2 input-reset ba b--blue bg-blue hover-bg-white hover-black w-100\"\n                type=\"submit\"\n                value=\"Sign in\"\n                onClick={() => onRouteChange(\"home\")}\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange(\"register\")}\n                className=\"f6 link dim white db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </form>\n        </main>\n      </article>\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\n\nconst Register = ({ onRouteChange }) => {\n  return (\n    <article\n      className=\"br3 ba blue b--blue-10 mv4 w-100 w-50-m w-25-l mw5 shadow-5 center\"\n      style={{ boxShadow: \"4px 4px 8px 0px white\" }}\n    >\n      <main className=\"pa4 white-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--white ph0 mh0\">\n            <legend className=\"f3 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-white hover-bg-blue hover-white w-100\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-white hover-bg-blue hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-white hover-bg-blue hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              className=\"b ph3 pv2 input-reset ba b--blue bg-blue hover-bg-white hover-black grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Register\"\n              onClick={() => onRouteChange(\"home\")}\n            />\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Rank from \"./components/Rank/Rank\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport Register from \"./components/Register/Register\";\nimport \"./App.css\";\nimport \"tachyons\";\n\nconst app = new Clarifai.App({\n  apiKey: \"232a5948f1ab40f58bc8e21ec1190b73\",\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 60,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n    color: {},\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: [],\n      route: \"SignIn\",\n      isSignedIn: false,\n      showImage: false,\n    };\n  }\n\n  calculateFaceLocation = (data, i) => {\n    let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    let image = document.getElementById(\"inputimage\");\n    let width = Number(image.width);\n    let height = Number(image.height);\n    return {\n      leftcol: clarifaiFace.left_col * width,\n      toprow: clarifaiFace.top_row * height,\n      rightcol: width - clarifaiFace.right_col * width,\n      bottomrow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({\n      box: [...this.state.box, box],\n    });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({\n      box: [],\n      imageUrl: this.state.input,\n      showImage: true,\n    });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        for (let i = 0; i < response.outputs[0].data.regions.length; i++) {\n          this.displayFaceBox(this.calculateFaceLocation(response, i));\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState({ isSignedIn: false });\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particleOptions} />\n        <Navigation\n          isSignedIn={this.state.isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {this.state.route === \"home\" ? (\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              box={this.state.box}\n              imageUrl={this.state.imageUrl}\n              showImage={this.state.showImage}\n            />\n          </div>\n        ) : this.state.route === \"SignIn\" ? (\n          <div>\n            <Logo />\n            <SignIn onRouteChange={this.onRouteChange} />\n          </div>\n        ) : (\n          <div>\n            <Logo />\n            <Register onRouteChange={this.onRouteChange} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain-icon.7302d0a5.svg\";"],"sourceRoot":""}